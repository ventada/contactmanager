{"version":3,"sources":["context.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/layout/TextInputGroup.js","components/contacts/AddContact.js","components/layout/Header.js","components/pages/About.js","components/pages/NotFound.js","components/test/Test.js","components/contacts/EditContact.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","Object","objectSpread","contacts","filter","contact","id","payload","concat","toConsumableArray","map","Provider","dispatch","_this","setState","axios","get","res","this","data","react_default","a","createElement","value","props","children","Component","Consumer","Contact","showContentInfo","onShowClick","e","onDeleteClick","_callee","regenerator_default","wrap","_context","prev","next","delete","stop","_this2","_this$props$contact","name","email","phone","className","onClick","bind","style","cursor","float","color","Link","to","marginRight","Contacts","Fragment","contacts_Contact","key","TextInputGroup","_ref","lable","placeholder","onChange","errors","htmlFor","classnames","is-invalid","defaultProps","AddContact","onSubmit","_this$state","newContact","preventDefault","abrupt","uuid","post","sent","history","push","onchange","defineProperty","target","_this$state2","layout_TextInputGroup","Header","href","branding","About","NotFound","Test","title","body","fetch","then","response","json","EditContact","updContact","match","params","put","App","context_Provider","HashRouter","layout_Header","Switch","Route","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a02db00b.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst Context = React.createContext();\r\n\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"DELETE_CONTACT\":\r\n      return {\r\n        ...state,\r\n        contacts: state.contacts.filter(\r\n          contact => contact.id !== action.payload\r\n        )\r\n      };\r\n    case \"ADD_CONTACT\":\r\n      return {\r\n        ...state,\r\n        contacts: [action.payload, ...state.contacts]\r\n      };\r\n    case \"UPDATE_CONTACT\":\r\n      return {\r\n        ...state,\r\n        contacts: state.contacts.map(contact =>\r\n          contact.id === action.payload.id\r\n            ? (contact = action.payload)\r\n            : contact\r\n        )\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default class Provider extends Component {\r\n  state = {\r\n    contacts: [],\r\n    dispatch: action => {\r\n      this.setState(state => reducer(state, action));\r\n    }\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const res = await axios.get(\"https://jsonplaceholder.typicode.com/users\");\r\n\r\n    this.setState({ contacts: res.data });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Context.Provider value={this.state}>\r\n        {this.props.children}\r\n      </Context.Provider>\r\n    );\r\n  }\r\n}\r\nexport const Consumer = Context.Consumer;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Consumer } from \"../../context\";\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass Contact extends Component {\r\n  state = {\r\n    showContentInfo: false\r\n  };\r\n\r\n  onShowClick = e => {\r\n    this.setState({ showContentInfo: !this.state.showContentInfo });\r\n  };\r\n\r\n  onDeleteClick = async (id, dispatch) => {\r\n    await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`);\r\n\r\n    dispatch({ type: \"DELETE_CONTACT\", payload: id });\r\n  };\r\n\r\n  render() {\r\n    const { showContentInfo } = this.state;\r\n    const { name, email, phone, id } = this.props.contact;\r\n\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card card-body mb-3\">\r\n              <h4>\r\n                {name}{\" \"}\r\n                <i\r\n                  onClick={this.onShowClick.bind(this)}\r\n                  className=\"fas fa-sort-down\"\r\n                  style={{ cursor: \"pointer\" }}\r\n                />\r\n                <i\r\n                  className=\"fas fa-times\"\r\n                  style={{ cursor: \"pointer\", float: \"right\", color: \"red\" }}\r\n                  onClick={this.onDeleteClick.bind(this, id, dispatch)}\r\n                />\r\n                <Link to={`/contact/edit/${id}`}>\r\n                  <i\r\n                    className=\"fas fa-pencil-alt\"\r\n                    style={{\r\n                      cursor: \"pointer\",\r\n                      float: \"right\",\r\n                      color: \"black\",\r\n                      marginRight: \"1rem\"\r\n                    }}\r\n                  />{\" \"}\r\n                </Link>\r\n              </h4>\r\n              {showContentInfo ? (\r\n                <ul className=\"list-group\">\r\n                  <li className=\"list-group-item\">Email:{email}</li>\r\n                  <li className=\"list-group-item\">Phone:{phone}</li>\r\n                </ul>\r\n              ) : null}\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nContact.propTypes = {\r\n  contact: PropTypes.object.isRequired\r\n};\r\n\r\nexport default Contact;\r\n","import React, { Component } from \"react\";\r\nimport Contact from \"./Contact\";\r\nimport { Consumer } from \"../../context\";\r\n\r\nclass Contacts extends Component {\r\n  render() {\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { contacts } = value;\r\n          return (\r\n            <React.Fragment>\r\n              <h1 className=\"display-4 mb-2\">\r\n                <span className=\"text-danger\">Contact</span> List\r\n              </h1>\r\n              {contacts.map(contact => (\r\n                <Contact key={contact.id} contact={contact} />\r\n              ))}\r\n            </React.Fragment>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Contacts;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport classnames from \"classnames\";\r\n\r\nconst TextInputGroup = ({\r\n  lable,\r\n  name,\r\n  value,\r\n  placeholder,\r\n  type,\r\n  onChange,\r\n  errors\r\n}) => {\r\n  return (\r\n    <div className=\"form-group\">\r\n      <label htmlFor={name}>{lable}</label>\r\n      <input\r\n        type={type}\r\n        name={name}\r\n        className={classnames(\"form-control form-control-lg\", {\r\n          \"is-invalid\": errors\r\n        })}\r\n        placeholder={placeholder}\r\n        value={value}\r\n        onChange={onChange}\r\n      />\r\n      {errors && <div className=\"invalid-feedback\">{errors}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nTextInputGroup.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  placeholder: PropTypes.string.isRequired,\r\n  value: PropTypes.string.isRequired,\r\n  type: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n  lable: PropTypes.string.isRequired,\r\n  errors: PropTypes.string\r\n};\r\n\r\nTextInputGroup.defaultProps = {\r\n  type: \"text\"\r\n};\r\n\r\nexport default TextInputGroup;\r\n","import React, { Component } from \"react\";\r\n\r\nimport { Consumer } from \"../../context\";\r\nimport TextInputGroup from \"../layout/TextInputGroup\";\r\nimport uuid from \"uuid\";\r\nimport axios from \"axios\";\r\n\r\nclass AddContact extends Component {\r\n  state = {\r\n    name: \"\",\r\n    email: \"\",\r\n    phone: \"\",\r\n    errors: {}\r\n  };\r\n\r\n  onSubmit = async (dispatch, e) => {\r\n    e.preventDefault();\r\n\r\n    const { name, email, phone } = this.state;\r\n\r\n    //CHECK FOR ERRORS\r\n    if (name === \"\") {\r\n      this.setState({ errors: { name: \"Name Is Required\" } });\r\n      return;\r\n    }\r\n    if (email === \"\") {\r\n      this.setState({ errors: { email: \"Email Is Required\" } });\r\n      return;\r\n    }\r\n    if (phone === \"\") {\r\n      this.setState({ errors: { phone: \"Phone Is Required\" } });\r\n      return;\r\n    }\r\n\r\n    const newContact = {\r\n      id: uuid(),\r\n      name,\r\n      email,\r\n      phone\r\n    };\r\n\r\n    const res = await axios.post(\r\n      \"https://jsonplaceholder.typicode.com/users\",\r\n      newContact\r\n    );\r\n    dispatch({ type: \"ADD_CONTACT\", payload: res.data });\r\n\r\n    this.setState({\r\n      name: \"\",\r\n      email: \"\",\r\n      phone: \"\",\r\n      errors: {}\r\n    });\r\n\r\n    this.props.history.push(\"/\");\r\n  };\r\n  onchange = e => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  render() {\r\n    const { name, email, phone, errors } = this.state;\r\n\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card mb-3\">\r\n              <div className=\"card-header\">Add Contact</div>\r\n              <div className=\"card-body\">\r\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                  <TextInputGroup\r\n                    lable=\"Name\"\r\n                    placeholder=\"Enter Name....\"\r\n                    name=\"name\"\r\n                    value={name}\r\n                    onChange={this.onchange}\r\n                    errors={errors.name}\r\n                  />\r\n                  <TextInputGroup\r\n                    lable=\"Email\"\r\n                    placeholder=\"Enter Email....\"\r\n                    name=\"email\"\r\n                    value={email}\r\n                    onChange={this.onchange}\r\n                    errors={errors.email}\r\n                  />\r\n                  <TextInputGroup\r\n                    lable=\"Phone\"\r\n                    placeholder=\"Enter Phone....\"\r\n                    name=\"phone\"\r\n                    value={phone}\r\n                    onChange={this.onchange}\r\n                    errors={errors.phone}\r\n                  />\r\n                  <input\r\n                    type=\"submit\"\r\n                    value=\"Add Contact\"\r\n                    className=\"btn btn-light btn-block\"\r\n                  />\r\n                </form>\r\n              </div>\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddContact;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nconst Header = props => {\r\n  return (\r\n    <div>\r\n      <nav className=\"navbar navbar-expand-sm-navbar-dark bg-danger mb-3 py-0\">\r\n        <div className=\"container\">\r\n          <a href=\"/\" style={{ color: \"white\" }} className=\"navbar-brand\">\r\n            {props.branding}\r\n          </a>\r\n          <div>\r\n            <ul className=\"navbar-nav mr-auto\">\r\n              <li className=\"nav-item\">\r\n                <Link to=\"/\" style={{ color: \"white\" }} className=\"nav-link\">\r\n                  <i className=\"fas fa-home\" /> Home\r\n                </Link>\r\n              </li>\r\n\r\n              <li className=\"nav-item\">\r\n                <Link\r\n                  to=\"/contact/add\"\r\n                  style={{ color: \"white\" }}\r\n                  className=\"nav-link\"\r\n                >\r\n                  <i className=\"fas fa-plus\" /> Add\r\n                </Link>\r\n              </li>\r\n\r\n              <li className=\"nav-item\">\r\n                <Link\r\n                  to=\"/about\"\r\n                  style={{ color: \"white\" }}\r\n                  className=\"nav-link\"\r\n                >\r\n                  <i className=\"fas fa-question\" /> About\r\n                </Link>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    </div>\r\n  );\r\n};\r\n\r\nHeader.propTypes = {\r\n  branding: PropTypes.string.isRequired\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\n\r\nexport default function About() {\r\n  return (\r\n    <div>\r\n      <h1 className=\"display-4\">ABOUT CONTACT</h1>\r\n      <p className=\"lead\">Simple app too manage contact</p>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function NotFound() {\r\n  return (\r\n    <div>\r\n      <h1 className=\"display-4\">404 Page Not Found</h1>\r\n      <p className=\"lead\">Sorry,that page deos not exist</p>\r\n    </div>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nclass Test extends Component {\r\n  state = {\r\n    title: \"\",\r\n    body: \"\"\r\n  };\r\n\r\n  componentDidMount() {\r\n    fetch(\"https://jsonplaceholder.typicode.com/posts/1\")\r\n      .then(response => response.json())\r\n      .then(data =>\r\n        this.setState({\r\n          title: data.title,\r\n          body: data.body\r\n        })\r\n      );\r\n  }\r\n\r\n  render() {\r\n    const { title, body } = this.state;\r\n    return (\r\n      <div>\r\n        <h1>{title}</h1>\r\n        <p>{body}</p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Test;\r\n","import React, { Component } from \"react\";\r\n\r\nimport { Consumer } from \"../../context\";\r\nimport TextInputGroup from \"../layout/TextInputGroup\";\r\nimport uuid from \"uuid\";\r\nimport axios from \"axios\";\r\n\r\nclass EditContact extends Component {\r\n  state = {\r\n    name: \"\",\r\n    email: \"\",\r\n    phone: \"\",\r\n    errors: {}\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const { id } = this.props.match.params;\r\n    const res = await axios.get(\r\n      `https://jsonplaceholder.typicode.com/users/${id}`\r\n    );\r\n\r\n    const contact = res.data;\r\n    this.setState({\r\n      name: contact.name,\r\n      email: contact.email,\r\n      phone: contact.phone\r\n    });\r\n  }\r\n\r\n  onSubmit = async (dispatch, e) => {\r\n    e.preventDefault();\r\n\r\n    const { name, email, phone } = this.state;\r\n\r\n    //CHECK FOR ERRORS\r\n    if (name === \"\") {\r\n      this.setState({ errors: { name: \"Name Is Required\" } });\r\n      return;\r\n    }\r\n    if (email === \"\") {\r\n      this.setState({ errors: { email: \"Email Is Required\" } });\r\n      return;\r\n    }\r\n    if (phone === \"\") {\r\n      this.setState({ errors: { phone: \"Phone Is Required\" } });\r\n      return;\r\n    }\r\n\r\n    const updContact = { name, email, phone };\r\n\r\n    const { id } = this.props.match.params;\r\n\r\n    const res = await axios.put(\r\n      `https://jsonplaceholder.typicode.com/users/${id}`,\r\n      updContact\r\n    );\r\n\r\n    dispatch({ type: \"UPDATE_CONTACT\", payload: res.data });\r\n\r\n    this.setState({\r\n      name: \"\",\r\n      email: \"\",\r\n      phone: \"\",\r\n      errors: {}\r\n    });\r\n\r\n    this.props.history.push(\"/\");\r\n  };\r\n  onchange = e => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  render() {\r\n    const { name, email, phone, errors } = this.state;\r\n\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card mb-3\">\r\n              <div className=\"card-header\">Edit Contact</div>\r\n              <div className=\"card-body\">\r\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                  <TextInputGroup\r\n                    lable=\"Name\"\r\n                    placeholder=\"Enter Name....\"\r\n                    name=\"name\"\r\n                    value={name}\r\n                    onChange={this.onchange}\r\n                    errors={errors.name}\r\n                  />\r\n                  <TextInputGroup\r\n                    lable=\"Email\"\r\n                    placeholder=\"Enter Email....\"\r\n                    name=\"email\"\r\n                    value={email}\r\n                    onChange={this.onchange}\r\n                    errors={errors.email}\r\n                  />\r\n                  <TextInputGroup\r\n                    lable=\"Phone\"\r\n                    placeholder=\"Enter Phone....\"\r\n                    name=\"phone\"\r\n                    value={phone}\r\n                    onChange={this.onchange}\r\n                    errors={errors.phone}\r\n                  />\r\n                  <input\r\n                    type=\"submit\"\r\n                    value=\"Update Contact\"\r\n                    className=\"btn btn-light btn-block\"\r\n                  />\r\n                </form>\r\n              </div>\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EditContact;\r\n","import React, { Component } from \"react\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Contacts from \"./components/contacts/Contacts\";\nimport AddContact from \"./components/contacts/AddContact\";\nimport Provider from \"./context\";\n\nimport Header from \"./components/layout/Header\";\nimport About from \"./components/pages/About\";\nimport NotFound from \"./components/pages/NotFound\";\nimport Test from \"./components/test/Test\";\nimport EditContact from \"./components/contacts/EditContact\";\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider>\n        <Router>\n          <div className=\"App\">\n            <Header branding=\"Contact Manager\" />\n\n            <div className=\"container\">\n              <Switch>\n                <Route exact path=\"/\" component={Contacts} />\n                <Route exact path=\"/contact/add\" component={AddContact} />\n                <Route exact path=\"/contact/edit/:id\" component={EditContact} />\n                <Route exact path=\"/about\" component={About} />\n                <Route exact path=\"/test\" component={Test} />\n                <Route component={NotFound} />\n              </Switch>\n            </div>\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}